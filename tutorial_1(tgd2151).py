# -*- coding: utf-8 -*-
"""Tutorial 1(TGD2151).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16N9Rw2WOAWCueSAchyEGCYhtBofgsMRP
  
"""

pip install matplotlib

import streamlit as st
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# DDA Function for line generation
 
 
def DDA(x0, y0, x1, y1):
 
   
    dx = abs(x0 - x1)
    dy = abs(y0 - y1)
 
   
    steps = max(dx, dy)
 

    xinc = dx/steps
    yinc = dy/steps
 

    x = float(x0)
    y = float(y0)
 
  
    x_coorinates = []
    y_coorinates = []
 
    for i in range(steps):
       
        x_coorinates.append(x)
        y_coorinates.append(y)
        
        x = x + xinc
        y = y + yinc
        st.header(i+1,": \t","X: ",x, "\tY: ", y)
    fig = plt.figure(figsize=(10, 4))
    plt.title("Midpoint Line Algorithm")
    plt.xlabel("X-Axis")
    plt.ylabel("Y-Axis")
    plt.plot(xcoordinates, ycoordinates)
    plt.show()
    st.pyplot(fig)
 
 

if __name__ == "__main__":
 

    x1, y1 = 10, 10
    x2, y2 = 60, 60

    #print("Enter the value of x1: ")
    #x1 = int(input())
    #print("Enter the value of x2: ")
    #x2 = int(input())
    #print("Enter the value of y1: ")
    #y1 = int(input())
    #print("Enter the value of y2: ")
    #y2 = int(input())

    # Function call
    DDA(x1, y1, x2, y2)
 
